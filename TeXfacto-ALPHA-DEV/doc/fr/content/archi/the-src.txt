this::
    date = 2023-11-22


abrev::
    content = :this.name:


==========
Où coder ?
==========

Le \dev "morceau par morceau" se fait dans le sous-dossier path::''src'' via des "bouts" de fichiers ext::''sty'' \etou ext::''cls''
((
    Rappelons que l'on peut développer en parallèle une classe et un \pack ayant le même nom.
))
placés obligatoirement dans des sous-dossiers directs de path::''src'', ces différents morceaux seront recollés \auto^t pour bâtir le \pack \etou la classe à distribuer.


caution::
    On travaille dans des sous-dossiers directs de path::''src'' sans passer via des "sous-sous-dossiers" car \tex travaille avec une \struct virtuelle plate, c'est donc une contrainte \tech forte qui nous est imposée.


warning::
    Un sous-dossier spécial path::''changelog'' est utilisé pour le journal des \chgts destiné aux utilisateurs : voir cf::''?/latex/the-docs.txt'' à ce propos.
    Ceci rend impossible le codage de fonctionnalités dans un sous-dossier nommé path::''changelog''.


Le travail de \texfacto sera de produire un dossier path::''rollout'' contenant le minimum de fichiers avant les tests, puis la distribution sur \ctan via \l3build
((
    Ces deux sujets seront abordés plus tard.
)).
Dans le cas le plus basique, on obtiendra un dossier comme le suivant
((
    Si besoin, un \chgt de nom du projet pourra être fait afin d'obtenir un nom acceptable pour un \pack \latex.
))
où le fichier de \cfg path::''build.lua'' est fourni clés en main.

dirtree::
    ---
    path = ?/example/pack/dirtree-final-basic.txt
    ---


Comme nous allons le voir, l'ordre suivant lequel les morceaux seront recollées est paramétrable, et de plus il est possible de s'appuyer sur des resources nécessaires au fonctionnement du \pack \etou de la classe.


content::
    \content/sorting.txt
    \content/resources.txt
