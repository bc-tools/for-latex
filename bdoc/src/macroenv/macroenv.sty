% == TOOLS == %

% -- EXPLAIN - PACKAGES, MACROS & ENVIRONMENTS -- %

%%%
% prototype::
%     #1 : the name of a package
%
% ``\bdocpack{mypack}`` prints verb::``mypack``.
%
% note::
%     This macro is more semantic than useful.
%%%
\NewDocumentCommand{ \bdocpack } { m } {%
    \texttt{#1}%
}


%%%
% prototype::
%     #1 : the name of a macro
%
% ``\bdocenv{mymacro}`` prints verb::``\mymacro``.
%%%
\NewDocumentCommand{ \bdocmacro } { m } {%
    \texttt{\textbackslash{}#1}%
}


%%%
% prototype::
%     #1 : the name of an environment
%
% ``\bdocenv{myenv}`` prints verb::``\begin{myenv} ... \end{myenv}``
% where the spaces are secable.
%%%
\NewDocumentCommand{ \bdocenv } { m } {%
    \texttt{\textbackslash{}begin\{#1\} \!...\! \textbackslash{}end\{#1\}}%
}


% -- EXPLAIN - PREFIXES & SUFFIXES -- %

%%%
% prototype::
%     #1 : a prefix of a word
%     #2 : the remaining part of the word
%
% ``\bdocprewhy{pre}{fix}`` prints something like verb::``pre``-fix.
%%%
\NewDocumentCommand{ \bdocprewhy } { m m } {%
    \textbf{\bdocpre{#1}}$\cdot$#2%
}


%%%
% prototype::
%     #1 : just a prefix
%
% ``\bdocpre{pre}`` only prints verb::``pre``. This can be useful in
% a case like ``\bdocpre{pre} comes from \bdocprewhy{pre}{fix}`` which
% prints: verb::``pre`` comes from verb::``pre``-fix.
%%%
\NewDocumentCommand{ \bdocpre } { m } {%
    \texttt{#1}%
}
