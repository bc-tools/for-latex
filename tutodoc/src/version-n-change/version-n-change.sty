% == PACKAGES == %

\RequirePackage{fontawesome5}%
               [2022-05-02]

\RequirePackage{marginnote}%
               [2023-09-07]


% == TOOLS == %

% -- CHANGES - WHEN? --%

\ExplSyntaxOn

% :: MESSAGES :: %

\msg_set:nnnn { tdoc } { date-bad-format  }
  { Bad ~ format ~ for ~ a ~ date. }
  { Use ~ YYYY-MM-DD. }


% :: MARGIN NOTE :: %

\reversemarginpar{}

%%%
% prototype::
%     #1 : the color of the margin note
%     #2 : the first material (a version number or nothing)
%     #3 : the second material (a date or nothing)
%     #4 : the last negative vertical spacing for the 2nd rule
%
%     :action: this macro factorizes the printing of the changes
%              in the left margin.
%
%     :see: \__tdoc_translate_date:n
%%%
\NewDocumentCommand{\tutodoc@new@change@margin}{m m m m}{
  \marginnote{
    \color{#1}
    \scriptsize
    \centering

    \vspace{0pt}
    \rule{1.65cm}{.95pt}
    \vspace{-2.9pt}

    \IfBlankTF{#2}{}{
      \par
        #2
      \par
    }

    \IfBlankTF{#3}{}{
      \IfBlankTF{#2}{}{
        \vspace{1pt}
      }

      \par
        \__tdoc_translate_date:n { #3 }
      \par
    }

    \vspace{#4}
    \rule{1.65cm}{.95pt}
  }[-.345cm]
}


%%%
% prototype::
%     :action: this function checks if we have something like
%              ''YYYY-MM-DD'' and then it calls the function
%              ''\__tdoc_translate_date_process:w'' to finish
%              the job.
%
%     :see: \__tdoc_translate_date_process:w
%%%
\cs_new:Nn \__tdoc_translate_date:n {
  \regex_match:nnTF { \A \d{1,4} \- \d{2} \- \d{2} \Z } { #1 }{
    \__tdoc_translate_date_process:w #1 \q_stop
  }{
    \msg_error:nn { tdoc } { date-bad-format }
  }
}


%%%
% prototype::
%     :action: this function extracts year, month and day in something
%              like ''YYYY-MM-DD'' and then it calls ''\tutodoc@trans@date''
%              to use the format expected for a "localised" date.
%%%
\cs_new:Npn \__tdoc_translate_date_process:w #1 - #2 - #3 \q_stop {
    \tutodoc@trans@date{#1}
                       {#2}
                       {#3}
}

\ExplSyntaxOff


% :: VERSION AND DATE :: %

%%%
% prototype::
%     #1 : the color of the margin note
%     #2 : a version number
%     #3 : a date ''YYYY-MM-DD''
%
%     :action: this macro prints a margin note showing a version number
%              below a date, and the optional argument is used to colorize
%              all this text.
%
% warning::
%     The date must use an english formatting like ''2021-07-14''. This allows
%     to parse the date such as to display it following the standard convention
%     of the language chosen when loading the package.
%%%
\NewDocumentCommand{\tdocversion}{O{blue} m O{}}{
  \tutodoc@new@change@margin{#1}      % Color
                            {#2}      % Version
                            {#3}      % Date
                            {-4.25pt} % Last negative vertical spacing
}


% :: DATE :: %

%%%
% prototype::
%     #1 : the color of the margin note
%     #2 : a date ''YYYY-MM-DD''
%
%     :action: this macro is similar to ''\tdocversion'' except that it just
%              prints a date.
%%%
\NewDocumentCommand{\tdocdate}{O{blue} m}{
  \tutodoc@new@change@margin{#1}      % Color
                            {#2}      % Date
                            {}        % Version
                            {-5.35pt} % Last negative spacing
}


% -- CHANGES - WHAT? -- %

\ExplSyntaxOn

% :: MESSAGES :: %

\msg_set:nnnn { tdoc } { changes-topic-missing-title }
  { Missing ~ title. }
  { One ~ single ~ title ~ must ~ be ~ indicated. }


% :: CHANGES - TOPIC :: %

%%%
% prototype::
%     #1 : a title that will be followed by a colon.
%     #2 : one material that expects to be an icon command from the
%          ''fontawsome5'' \pack.
%
%     :action: this environment prints some Â¨infos about specific changes
%              achieved in a new version (no special formatting is applied).
%%%
\NewDocumentEnvironment{tdoctopic}{ m O{} }{
  \IfBlankT{#1}{
    \msg_fatal:nn { tdoc } { changes-topic-missing-title }
  }%
  \textbf{%
    \IfBlankF{#2}{\tdocicon{#2}}%
    \textsc{#1.}
  }

  \begin{itemize}
}{
  \end{itemize}
}


% :: CHANGES - NEW THINGS :: %

%%%
% We use a ''prop'' variable to factorize the code just after.
%%%
\prop_new:N              \__g_tutodoc_topic_change_prop
\prop_set_from_keyval:Nn \__g_tutodoc_topic_change_prop {
  break  = \faCodeBranch,
  fix    = \faWrench,
  new    = \faGem,
  prob   = \faFire*,
  update = \faMagic,
}


%%%
% prototype::
%     :see: env.tdoctopic
%
%     :action: ''key/value'' iteration over ''\__g_tutodoc_topic_change_prop''
%              to build topic-like \envs using the \env ''tdoctopic''
%              (the title used is translated into the good language).
%%%
\prop_map_inline:Nn \__g_tutodoc_topic_change_prop {
  \NewDocumentEnvironment{ tdoc#1 } {} {
    \begin{tdoctopic}{ \use:c { tutodoc@trans@chges@#1 } } [ #2 ]
  }{
    \end{tdoctopic}
  }
}


%%%
% prototype::
%     #1 : a short text expected t indicate the very first version of a project.
%
%     :action: the short text printed will be preceded by a pretty anchor icon.
%%%
\NewDocumentCommand{ \tdocstartproj }{ m } {
  \tdocicon{\faAnchor}#1
}

\ExplSyntaxOff
