% == TOOLS == %

% -- NAMES OF PACKAGES, MACROS & ENVIRONMENTS -- %

%%%
% prototype::
%     #1 : the name of a class
%
%     :action: ''\bdoccls{myclass}'' prints verb::''myclass''.
%%%
\NewDocumentCommand{\bdoccls}{m}{%
  \texttt{#1}%
}


%%%
% prototype::
%     #1 : the name of a package
%
%     :action:''\bdocpack{mypack}'' prints verb::''mypack''.
%%%
\NewDocumentCommand{\bdocpack}{m}{%
  \texttt{#1}%
}


%%%
% prototype::
%     #1 : the name of a macro
%
%     :action: ''\bdocenv{mymacro}'' prints verb::''\mymacro''.
%%%
\NewDocumentCommand{\bdocmacro}{m}{%
  \texttt{\textbackslash{}#1}%
}


%%%
% prototype::
%     #1 : hard typed options with the good delimiters
%     #2 : the name of an environment
%
%     :action: ''\bdocenv{myenv}'' prints verb::''\begin{myenv} ... \end{myenv}''
%              or something like verb::''\begin{myenv}<opt1> ... \end{myenv}'',
%              the spaces being secable.
%%%
\NewDocumentCommand{\bdocenv}{O{}m}{%
  \texttt{\textbackslash{}begin\{#2\}#1 %
          \!...\! %
          \textbackslash{}end\{#2\}}%
}


% -- EXPLAINING PREFIXES -- %

\ExplSyntaxOn

% :: MESSAGES :: %

\msg_set:nnnn { bdoc } { prefixwhy-bad-format }
{ Bad ~ format, ~ something ~ like ~ ''pre.fix'' ~ expected. }
{ You ~ must ~ use ~ one ~ single ~ point. }


% :: PREFIX FROM... :: %

%%%
% prototype::
%     #1 : a prefix and a suffix separated by one colon.
%
%     :action: ''\bdocprewhy{pre.fix}'' prints verb::''pre''.fix.
%%%
\NewDocumentCommand{\bdocprewhy}{m}{%
% Do we have 2 parts?
  \seq_set_split:Nnn \l_tmpa_seq { . } { #1 }

  \int_set:Nn \l_tmpa_int
              {\int_eval:n {\seq_count:N \l_tmpa_seq}}

  \if_int_compare:w \l_tmpa_int = 2
  \else:
    \msg_error:nn { bdoc } { prefixwhy-bad-format }
  \fi:

% Let's go.
  \seq_pop:NN \l_tmpa_seq \l_tmpa_tl
  \seq_pop:NN \l_tmpa_seq \l_tmpb_tl

  \textbf{\bdocpre{\tl_use:N \l_tmpa_tl}\kern.5pt\textperiodcentered\kern.5pt{\tl_use:N \l_tmpb_tl}}
}

\ExplSyntaxOff


% :: JUST ONE PREFIX :: %

%%%
% prototype::
%     #1 : just a prefix
%
%     :action: ''\bdocpre{pre}'' only prints verb::''pre''.
%              This can be useful in a case like
%              ''\bdocpre{pre} comes from \bdocprewhy{pre}{fix}''
%              which prints:
%              verb::''pre'' comes from verb::''pre''-fix.
%%%
\NewDocumentCommand{\bdocpre}{m}{%
  \texttt{#1}%
}
